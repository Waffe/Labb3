@using WorkoutPlanner.Data.Entities
@model WorkoutPlanner.MVC.Models.AuthProfileViewModels.ProfileAuthViewModel

@{
    ViewData["Title"] = "Details";
}



<h2>Details</h2>

<div>
    <h4>Profile</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Profile.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Profile.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Profile.DateOfBirth)
        </dt>
        <dd>
            @Model.Profile.DateOfBirth.ToString("d")
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Profile.Weight)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Profile.Weight)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Profile.Lenght)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Profile.Lenght)
        </dd>
    </dl>
</div>
<table class="table">
    <thead>
    <tr>
        <th>
            Workout
        </th>
        <th>
            Details
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Workouts) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a asp-controller="Workout" asp-action="Details" asp-route-id="@item.Id">Go to workout</a>
            </td>
        </tr>
    }
    </tbody>
</table>
<div>
    @if (Model.IsAuthor)
    {
        <a asp-action="Edit" asp-route-id="@Model.Profile.Id">Edit |</a>
    }
    
    <a asp-action="Index">Back to List</a>
</div>
