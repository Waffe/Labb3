@using WorkoutPlanner.Data.Entities
@model WorkoutPlanner.Data.Entities.Workout

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>Workout</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ProfileId"/>
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>
<table class="table">
    <thead>
    <tr>
        <th>
            <p>Exercises</p>
        </th>
        <th>
            <p>Weight</p>
        </th>
        <th>
            <p>Reps</p>
        </th>
        <th>
            <p>Sets</p>
        </th>
        <th>
            <p>Minutes</p>
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Exercises)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Exercise.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reps)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sets)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Minutes)
            </td>
            <td>
                <a asp-action="DeleteWorkoutExercise" asp-route-id="@item.Id" asp-route-workoutid="@item.WorkoutId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
<form asp-action="AddExercise" asp-controller="Workout" asp-route-workoutId="@Model.Id">
    
    @{var exerciseId = 0;}

    <div class="form-horizontal">
        <div class="form-group">
            <label class="col-md-2 control-label">Exercise</label>
            <div class="col-md-10">
                <select asp-for="@exerciseId" asp-items="@(new SelectList(ViewBag.Exercises, "Id", "Name"))"></select>
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Weight:</label>
            <div class="col-md-10">
                <input name="weight" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Reps:</label>
            <div class="col-md-10">
                <input name="reps" class="form-control" style="width: 60px;" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Sets:</label>
            <div class="col-md-10">
                <input name="sets" class="form-control" style="width: 60px;" />
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Minutes:</label>
            <div class="col-md-10">
                <input name="minutes" class="form-control" style="width: 60px;" />
            </div>
        </div>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Exercise" class="btn btn-default" />
        </div>
    </div>
    
    
</form>



<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
